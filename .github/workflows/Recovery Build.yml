name: Recovery Build

on:
  workflow_dispatch:
    inputs:
      MANIFEST_BRANCH:
        type: choice
        description: Manifest Branch
        options:
        - 12.1
        - 11
        - 9.0
        - 8.1
        - 7.1
        - 6.0
        required: true
        default: 12.1
      DEVICE_TREE_URL:
        description: Device Tree URL
        required: true
        default: https://github.com/valerydelinois/android_device_samsung_a32x
      DEVICE_TREE_BRANCH:
        description: Device Tree Branch
        required: true
        default: a32xktt-user-12-SP1A.210812.016-A326KKSU4DWB7-release-keys
      DEVICE_PATH:
        description: Path the device tree should be synced to, relative to source root
        required: true
        default: device/samsung/a32x
      DEVICE_NAME:
        description: Device Name from tree (should match name on twrp_<DEVICE_NAME>.mk)
        required: true
        default: a32x
      REPOPICK_PATCHES:
        description: (Optional) Gerrit commit numbers separated by a space to be included in the build (leave blank if not using)
        type: string
        required: false
      BUILD_TARGET:
        type: choice
        description: Partition containing recovery ramdisk
        options:
        - boot
        - recovery
        - vendor_boot
        required: true
        default: recovery
      RECOVERY_INSTALLER:
        description: Include recovery installer zip
        type: boolean
        required: true
        default: false

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-20.04
    # You can use either of the ubuntu-20.04 or ubuntu-22.04 runner
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Manifest Branch: ${{ inputs.MANIFEST_BRANCH }}"
        echo "Device Tree URL: ${{ inputs.DEVICE_TREE_URL }}"
        echo "Device Tree Branch: ${{ inputs.DEVICE_TREE_BRANCH }}"
        echo "Device Path: ${{ inputs.DEVICE_PATH }}"
        echo "Device Name: ${{ inputs.DEVICE_NAME }}"
        echo "Build Target: ${{ inputs.BUILD_TARGET }}.img"
        echo "Include Recovery Installer: ${{ inputs.RECOVERY_INSTALLER }}"
        echo "::endgroup::"
 
    # You might want to Checkout your repo first, but not mandatory
    - name: Check Out
      uses: actions/checkout@v4
            
    # Cleanup The Actions Workspace Using Custom Composite Run Actions
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main
      # That's it! Now use your normal steps

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 24

    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt -y install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libtinfo5
        sudo add-apt-repository universe
        sudo apt -y install libncurses5

    - name: Check Build Tree
      uses: haya14busa/action-cond@v1.2.1
      id: buildtree
      with:
        cond: ${{ inputs.MANIFEST_BRANCH == '11' || inputs.MANIFEST_BRANCH == '12.1' }}
        if_true: aosp
        if_false: omni

    - name: Install OpenJDK
      if: steps.buildtree.outputs.value == 'omni'
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8

    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo
      
    - name: Initialize repo
      run: |
        mkdir workspace
        cd workspace
        git config --global user.name "${GITHUB_ACTOR}"
        git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
        repo init --depth=1 -u https://github.com/minimal-manifest-twrp/platform_manifest_twrp_${{ steps.buildtree.outputs.value }}.git -b twrp-${{ inputs.MANIFEST_BRANCH }}
          
    - name: Repo Sync
      run: |
        repo sync -j$(nproc --all) --force-sync
      working-directory: workspace

    - name: Create roomservice.xml
      run: |
        mkdir -p .repo/local_manifests
        cp -f ${GITHUB_WORKSPACE}/templates/*.xml .repo/local_manifests/
      working-directory: workspace

    - name: Clone device tree (TeamWin)
      if: |
        contains( inputs.DEVICE_TREE_URL,'/TeamWin/' )
        && steps.buildtree.outputs.value == 'aosp'
      run: |
        sed -i "s%\!--project name=\"{DEVICE_TREE_URL_REPO}%project name=\"$(grep -oP '(?<=TeamWin/).*' <<< ${{ inputs.DEVICE_TREE_URL }})%g" .repo/local_manifests/roomservice.xml
        sed -i "s%{DEVICE_PATH}%${{ inputs.DEVICE_PATH }}%g" .repo/local_manifests/roomservice.xml
        sed -i "s%{DEVICE_REMOTE_NAME}%TeamWin%g" .repo/local_manifests/roomservice.xml
        sed -i "s%{DEVICE_TREE_BRANCH}\"/-->%${{ inputs.DEVICE_TREE_BRANCH }}\"/>%g" .repo/local_manifests/roomservice.xml
        repo sync -j$(nproc --all)
      working-directory: workspace

    - name: Clone device tree (Github)
      if: |
        !contains( inputs.DEVICE_TREE_URL,'/TeamWin/' )
        && steps.buildtree.outputs.value == 'aosp'
      run: |
        sed -i "s%\!--project name=\"{DEVICE_TREE_URL_REPO}%project name=\"$(grep -oP '(?<=github.com/).*' <<< ${{ inputs.DEVICE_TREE_URL }})%g" .repo/local_manifests/roomservice.xml
        sed -i "s%{DEVICE_PATH}%${{ inputs.DEVICE_PATH }}%g" .repo/local_manifests/roomservice.xml
        sed -i "s%{DEVICE_REMOTE_NAME}%github%g" .repo/local_manifests/roomservice.xml
        sed -i "s%{DEVICE_TREE_BRANCH}\"/-->%${{ inputs.DEVICE_TREE_BRANCH }}\"/>%g" .repo/local_manifests/roomservice.xml
        repo sync -j$(nproc --all)
      working-directory: workspace

    - name: Clone device tree (Omni)
      if: ${{ steps.buildtree.outputs.value == 'omni' }}
      run: |
        git clone ${{ inputs.DEVICE_TREE_URL }} -b ${{ inputs.DEVICE_TREE_BRANCH }} ./${{ inputs.DEVICE_PATH }}
      working-directory: workspace

    - name: Sync Device Dependencies (AOSP)
      if: ${{ steps.buildtree.outputs.value == 'aosp' }}
      run: |
        source build/envsetup.sh
        lunch twrp_${{ inputs.DEVICE_NAME }}-eng
      working-directory: workspace
      id: syncdevicedeps
      continue-on-error: true

    - name: Sync Device Dependencies (Omni/subdevices)
      if: |
        steps.buildtree.outputs.value == 'omni'
        || steps.syncdevicedeps.outcome == 'failure'
      run: |
        bash ${GITHUB_WORKSPACE}/scripts/convert.sh ${{ inputs.DEVICE_PATH }}/${{ steps.buildtree.outputs.value }}.dependencies
        repo sync -j$(nproc --all)
      working-directory: workspace
      continue-on-error: true

    - name: Repopick Gerrit patches
      if: inputs.REPOPICK_PATCHES != null
      run: |
        source build/envsetup.sh
        repopick -g https://gerrit.twrp.me ${{ inputs.REPOPICK_PATCHES }}
      working-directory: workspace
      continue-on-error: true

    - name: Include Recovery Installer
      if: inputs.RECOVERY_INSTALLER == true && inputs.MANIFEST_BRANCH != '6.0' && inputs.BUILD_TARGET != 'vendor_boot'
      run: |
        case ${{ inputs.MANIFEST_BRANCH }} in
          7.1)
            patchNum=5080
            ;;
          8.1)
            patchNum=5079
            ;;
          9.0)
            patchNum=5037
            ;;
          11)
            patchNum=4964
            ;;
          12.1)
            patchNum=5445
            ;;
        esac
        source build/envsetup.sh
        repopick -g https://gerrit.twrp.me ${patchNum}
      working-directory: workspace
      id: recoveryinstaller
      continue-on-error: true

    - name: Install Python 2
      if: ${{ steps.buildtree.outputs.value == 'omni' }}
      run: |
        sudo apt -y install python2
        cd /usr/bin
        sudo ln -sf python2 python

    - name: Building recovery (AOSP)
      if: ${{ steps.buildtree.outputs.value == 'aosp' }} 
      run: |
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        if [ ${{ inputs.RECOVERY_INSTALLER }} = true ] && [ ${{ steps.recoveryinstaller.outcome == 'success' }} ]; then
          export USE_RECOVERY_INSTALLER=true
          export RECOVERY_INSTALLER_PATH=bootable/recovery/installer
        fi
        lunch twrp_${{ inputs.DEVICE_NAME }}-eng && make $(tr -d _ <<< ${{ inputs.BUILD_TARGET }})image -j$(nproc --all)
      working-directory: workspace

    - name: Building recovery (Omni)
      if: ${{ steps.buildtree.outputs.value == 'omni' }} 
      run: |
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        if [ ${{ inputs.RECOVERY_INSTALLER }} = true ] && [ ${{ steps.recoveryinstaller.outcome == 'success' }} ]; then
          export USE_RECOVERY_INSTALLER=true
          export RECOVERY_INSTALLER_PATH=bootable/recovery/installer
        fi
        lunch ${{ steps.buildtree.outputs.value }}_${{ inputs.DEVICE_NAME }}-eng && make ${{ inputs.BUILD_TARGET }}image -j$(nproc --all)
      working-directory: workspace

    - name: Upload to Release
      uses: softprops/action-gh-release@4634c16e79c963813287e889244c50009e7f0981
      with:
        files: |
          workspace/out/target/product/${{ inputs.DEVICE_NAME }}/${{ inputs.BUILD_TARGET }}.img
          workspace/out/target/product/${{ inputs.DEVICE_NAME }}/*installer*zip
          workspace/out/target/product/${{ inputs.DEVICE_NAME }}/obj/PACKAGING/vendor_ramdisk_fragments_intermediates/recovery.*
          workspace/out/target/product/${{ inputs.DEVICE_NAME }}/ramdisk-recovery.*
        name: ${{ inputs.DEVICE_NAME }} (TWRP)
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: ${{ inputs.MANIFEST_BRANCH }}
          Target: ${{ inputs.BUILD_TARGET }}.img
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
